
/** modifier par hocin pour la premiere fois **/
/** modifier par hocin pour la deuxieme fois **/
/**
 * <b>la classe VectorHelper offre des methodes pour le traitement de donnée d'un tableaux </b>
 * <ul>
 *     <li>Le trie</li>
 *     <li>Sommer deux vecteurs</li>
 *     <li>Inverser les éléments d’un vecteur</li>
 *     <li>Obtenir le Min et le Max </li>
 *     <li>Appliquer un formule à tous les elements de vecteur</li>
 * </ul>
 * <ul

 */
public class VectorHelper {

    /**
     * <p>trie les elements d'un tableaux par ordre croissante .</p>
     * <p>cette methode utilse le trie par selection</p>
     * @param vector
     *   le tableaux des entiers non trié
     */
    public void sortVector (Vector vector) {
        for (int i=0; i<vector.coordinates.size()-2; i++){
            for(int j=i+1; j<vector.coordinates.size(); j++){
                    if (vector.coordinates.get(i)<vector.coordinates.get(j)){
                        permuter(vector.coordinates.get(i),vector.coordinates.get(j));
                    }
            }
        }
    }

    /**
     * <p>inverser les elements d'un tableaux </p>
     * @param vector
     *      tableaux des entiers .
     */
    public void switchElements (Vector vector){
        /**
         * j inialisé au l'indice de dernier element du tableaux
         */
        int j=vector.coordinates.size();
        for (int i=0 ; i<=((vector.coordinates.size()-1)/2);i++){
            permuter(vector.coordinates.get(i),vector.coordinates.get(j));
            j--;
        }
    }

    /**
     * <p>retourner le Min et le Max d'un tableau donner </p>
     * @param vector
     *  tab des entiens .
     */
    public void getMinMax (Vector vector){
        int min=vector.coordinates.get(0);
        int max=vector.coordinates.get(0);
        for (int i=0 ; i<=vector.coordinates.size(); i++){
            if (vector.coordinates.get(i)<min) min=vector.coordinates.get(i) ; else
            if (vector.coordinates.get(i)>max) max=vector.coordinates.get(i);
        }
        System.out.print("le minimum = " +min+"le maximum = "+max);
    }

    /**
     * <p>sommer l'element d'indice i du tableau 1 avec l'element d'indice i de tableau 2 </p>
     * @param tab1
     *      un tableau des entiers
     * @param tab2
     *      un tableau des entiers
     * @return un vecteur de meme taille de tab1 et teb2 contient les sommes des elements de tab1 et tab2
     * @throws Exception_diff_taille
     *  <p>Exeption lever dans le cas du deffirence de tailles des 2 tableaux </p>
     */



    /**
     * <p>permuter la valeur de deux variable </p>
     * @param firstInt
     * @param secondInt
     */
    private void permuter(int firstInt, int secondInt) {
        int tempInt;
        tempInt=firstInt;
        firstInt=secondInt;
        secondInt=tempInt;
    }
}
